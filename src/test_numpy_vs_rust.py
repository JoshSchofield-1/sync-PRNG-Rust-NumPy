# This script uses a local array of numbers generated by rust to match against numpy numbers
import random as rnd
import numpy as np
import os.path

rnd.seed(3604)

state = rnd.getstate()

# Create state for numpy
new_state = ('MT19937', [int(s) for s in list(state[1])], 624, 0, 0.0)
# print(new_state)

np.random.set_state(new_state)

# Testing expected values
# print("np random: ", np.random.random())
# print("rnd random: ", rnd.random())

# Array of f64 values between 0-1 generated using mersenne twister Rust crate
# This is executed to be rust = []
exec(open(os.path.expanduser("~/testing_mersenne/data/rust_random_vals.txt")).read())

print("rust len", len(rust))
counter = 0
for i in range(1000):
    gen = np.random.random()
    if gen != rust[i]:
        print("MATCH FAILED")
    else:
        counter +=1
if counter == 1000:
    print("Match success")
    
